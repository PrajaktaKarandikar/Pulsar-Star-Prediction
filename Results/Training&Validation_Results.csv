Logistic Regression,"(LogisticRegression(C=10, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=100,
                   multi_class='auto', n_jobs=-1, penalty='l2', random_state=30,
                   solver='lbfgs', tol=0.0001, verbose=0, warm_start=False), {'C': 10}, 0.9252580935536143, 95.7402, 89.0628)"
Naive Bayes,"(GaussianNB(priors=[0.75, 0.25], var_smoothing=1e-09), {'priors': [0.75, 0.25]}, 0.8841837024501364, 89.9441, 89.6629)"
SVM,"(SVC(C=1000, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='rbf',
    max_iter=-1, probability=True, random_state=30, shrinking=True, tol=0.001,
    verbose=False), {'C': 1000}, 0.9444864165632054, 92.3534, 69.4319)"
KNN,"(KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='distance'), {'weights': 'distance'}, 0.9592245902891626, 94.0642, 91.8021)"
Decision Tree,"(DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=30, splitter='best'), {'criterion': 'entropy'}, 0.9500973893062318, 92.9469, 87.5088)"
Random Forest,"(RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=None, oob_score=False, random_state=30, verbose=0,
                       warm_start=False), {'class_weight': 'balanced'}, 0.9693251806689853, 97.2765, 92.3653)"
AdaBoost,"(AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=5000, random_state=30), {'n_estimators': 5000}, 0.9286256005860427, 95.3911, 92.2343)"
Voting Classifier,"(VotingClassifier(estimators=[('lr',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=100,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=None,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('dt',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',...
                                                     min_impurity_split=None,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     n_estimators=100,
                                                     n_jobs=None,
                                                     oob_score=False,
                                                     random_state=None,
                                                     verbose=0,
                                                     warm_start=False)),
                             ('ab',
                              AdaBoostClassifier(algorithm='SAMME.R',
                                                 base_estimator=None,
                                                 learning_rate=1.0,
                                                 n_estimators=50,
                                                 random_state=None))],
                 flatten_transform=True, n_jobs=None, voting='soft',
                 weights=None), {'voting': 'soft'}, 0.959898522609401, 96.9274, 91.8651)"
